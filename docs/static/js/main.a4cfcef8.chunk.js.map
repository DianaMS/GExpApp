{"version":3,"sources":["Components/AddCategory.js","Helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","Hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","console","log","placeholder","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","elem","id","title","images","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","img","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAmB9C,OAEI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,GAC1BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,KAEdO,QAAQC,IAAI,2BAMhB,SACI,uBACIC,YAAY,GACZC,KAAM,OACNC,MAAUZ,EACVa,SAtBc,SAACV,GACxBF,EAAcE,EAAEW,OAAOF,a,+BCPjBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIKA,EAAKC,OAJV,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAS,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAKC,GACTC,MAAOF,EAAKE,MACZV,IAAG,UAAEQ,EAAKG,cAAP,aAAE,mBAAkCX,QAV5B,kBAcZM,GAdY,4CAAH,sDCCPM,EAAc,SAAC,GAAoB,IAAlBF,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OACI,sBAAKa,UAAU,yCAAf,UACI,qBAAKC,IAAMd,EAAMe,IAAML,IACvB,4BAAKA,QCJJM,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAKbO,ECLe,SAAEP,GAAe,IAAD,EAEdjB,mBAAS,CAC/BwB,KAAM,GACNY,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAoBxC,OAbAC,qBAAU,WACNvB,EAAQC,GACHuB,MAAK,SAAAC,GAEFH,EAAS,CACLd,KAAMiB,EACNL,SAAS,SAItB,CAAEnB,IAGEoB,EDfWK,CAAczB,GAAvBO,KAIT,OACI,qCACA,qBAAIQ,UAAU,oCAAd,cAAqDf,EAArD,OAEA,qBAAKe,UAAU,YAAf,SAEUR,EAAKE,KAAK,SAAAiB,GAAG,OACT,cAAC,EAAD,eAEOA,GADAA,EAAIf,aEhBpBgB,EAAe,WAAO,IAAD,EAEM5C,mBAAS,CAAC,SAFhB,mBAEvB6C,EAFuB,KAEX9C,EAFW,KAW9B,OACI,qCACI,8CACA,cAAE,EAAF,CAAcA,cAAgBA,IAC9B,uBAIA,6BAEQ8C,EAAWnB,KAAK,SAACT,GAAD,OACZ,cAAE,EAAF,CAEIA,SAAWA,GADLA,Y,MCpBlC6B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a4cfcef8.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n       setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories( cats => [ inputValue, ...cats])\r\n            setInputValue('');\r\n        } else {\r\n            console.log('no se agregar√° nada')\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                placeholder=\"\"\r\n                type= \"text\"\r\n                value = { inputValue }\r\n                onChange = { handleInputChange }\r\n            />\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\nexport const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=QFtZk4YgKPCurB6hv2clSGNK21ZkY1Ke`;\r\n    const resp = await fetch(url);\r\n    const { data }  = await resp.json();\r\n\r\n    const gifs = data.map(elem => {\r\n        return {\r\n            id: elem.id,\r\n            title: elem.title,\r\n            url: elem.images?.['downsized_medium'].url\r\n        }             \r\n    })\r\n\r\n    return gifs;\r\n    // setImages(gifs)\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {title, url} ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import { useFetchGifs } from '../Hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n\r\n\r\n     const { data } = useFetchGifs( category );\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\"> { category } </h3>\r\n\r\n        <div className=\"card-grid\">\r\n            {\r\n                  data.map( img => (                      \r\n                      <GifGridItem \r\n                        key={img.id}\r\n                        { ...img }\r\n                      />\r\n                  ))\r\n            }  \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../Helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    \r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n                \r\n            })\r\n    }, [ category ])\r\n\r\n\r\n    return state; // {data: [], loading: true}\r\n}","import { useState } from 'react';\r\nimport {AddCategory} from './Components/AddCategory';\r\nimport { GifGrid } from './Components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Goku'])\r\n\r\n    // const hadleAdd = () => {\r\n        \r\n    //     // setCategories([...categories, 'four'])\r\n    //     setCategories( cats => [ ...cats, 'four' ])\r\n\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h1>GifExpertApp</h1>\r\n            < AddCategory setCategories={ setCategories } />\r\n            <hr />\r\n\r\n            {/* <button onClick={ hadleAdd }>Agregar</button> */}\r\n\r\n            <ol>\r\n                { \r\n                    categories.map( (category) => (\r\n                        < GifGrid \r\n                            key= {category}\r\n                            category= {category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n            \r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}